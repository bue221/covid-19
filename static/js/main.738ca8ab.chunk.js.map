{"version":3,"sources":["components/Nav.js","components/Paises.js","components/Card.js","components/Graficos.js","App.js","index.js"],"names":["Nav","Navbar","className","Brand","Paises","onChange","useState","lista","setLista","useEffect","a","cargarLista","cargar","axios","get","datos","res","data","countries","map","pais","name","console","log","Form","Group","Label","Control","as","e","target","value","i","index","key","Info","Row","Card","Body","Text","start","end","confirmed","duration","separators","deaths","recovered","Spinner","animation","variant","Graph","dato","setDato","cargarDato","chart","Date","now","labels","datasets","label","backgroundColor","options","legend","display","fontColor","title","text","countryRegion","borderColor","fill","fontSize","App","setPais","setData","apidata","paisForm","url","Container","fluid","Col","xl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738ca8ab.chunk.js","sourcesContent":["import React from 'react';\n//bootstrap\nimport Navbar from 'react-bootstrap/Navbar';\nimport '../styles.css'\n\nconst Nav = () => {\n        return(\n                <>\n                <Navbar className='nav' >\n                        <Navbar.Brand>\n                                <h1>Covid 19 rasteador</h1>\n                        </Navbar.Brand>\n                  </Navbar>\n                </>\n        );\n}\n\nexport default Nav;\n\n","import React,{ useState, useEffect  } from 'react';\nimport axios from 'axios'\n\nimport Form from 'react-bootstrap/Form';\n\nconst Paises = ({ onChange  })=>{\n\n        const [lista, setLista] = useState([]);\n\n        useEffect(()=>{\n                const cargar = async()=>{\n                        setLista(await cargarLista());\n                }\n\n                cargar();\n        },[])\n\n        const cargarLista = async ()=> {\n                try{\n                        const datos = await axios.get('https://covid19.mathdro.id/api/countries');\n                        const res = datos.data.countries.map((pais)=> pais.name );\n                        return res;\n\n                }catch(err) {\n                        console.log(err);\n                }\n        }\n\n        //console.log(lista);\n\n        return(\n                <Form.Group>\n                        <Form.Label>Elija un Pa√≠s</Form.Label>\n                        <Form.Control as='select' onChange={(e)=> onChange(e.target.value)}>\n                                <option value='Seleccione un pais'>Seleccione un pais</option>\n                                {lista.map((i,index)=>(\n                                <option value={i} key={index}>{i}</option>\n                                ))}\n                        </Form.Control>\n                </Form.Group>\n        )\n\n}\n\nexport default Paises;\n","import React from 'react';\nimport CountUp from 'react-countup';\n\nimport { Card, Row, Spinner } from 'react-bootstrap';\n\nconst Info = ({ data })=>{\n        return(\n                <>\n                {!data.data ? (<Spinner animation=\"grow\" variant=\"info\" />)\n                        :\n                        (\n                                <div>\n                                        <Row>\n                                                <Card>\n                                                        <Card.Body>\n                                                                <Card.Text>\n                                                                        Contagios: \n                                                                        <CountUp \n                                                                        start={0}\n                                                                        end={data.data.confirmed.value}\n                                                                        duration={3}\n                                                                        separators=\".\"/>\n                                                                        <br />\n                                                                        Muertos: \n                                                                        <CountUp \n                                                                        start={0}\n                                                                        end={data.data.deaths.value}\n                                                                        duration={3}\n                                                                        separators=\".\"/>\n                                                                        <br />\n                                                                        Recuperados:\n                                                                        <CountUp \n                                                                        start={0}\n                                                                        end={data.data.recovered.value}\n                                                                        duration={3}\n                                                                        separators=\".\"/>\n                                                                </Card.Text>\n                                                        </Card.Body>\n                                                </Card>\n                                        </Row>\n                                </div>\n                                )\n                }\n                </>\n        );\n}\n\nexport default Info;\n","import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { Card, Row, Spinner } from 'react-bootstrap';\n\nconst Graph = ({pais, data})=>{\n\n        const [dato, setDato] = useState({});\n\n        useEffect(()=>{\n                const cargar = async()=>{\n                        const data = await cargarDato();\n                        setDato(data)\n                        console.log(dato)\n                }\n                cargar();\n        },[])\n\n        const cargarDato = async ()=>{\n                var date = Date.now();\n                //date = toLocaleDateString(date);\n                try{\n                        const data = await axios.get(`https://covid19.mathdro.id/api/daily/10-2-2020`);\n                        console.log(data);\n                        return data;\n                }catch(err){\n                        console.log(err);\n                }\n        }\n\n        let chart;\n\n        if(dato.data && (pais === 'Seleccione un pais' || pais === '' )){\n                chart = (\n                        <Line data={{\n                        labels: dato.data.map(i=> i.countryRegion),\n                        datasets: [\n                        {\n                        data: dato.data.map(i=> i.confirmed),\n                        label: 'Infectados',\n                        borderColor: 'red',\n                        fill: true\n                        },{\n                        data: dato.data.map(i=> i.deaths),\n                        label: 'Muertos',\n                        borderColor: 'black',\n                        fill: true\n                        },\n                        ]\n                        }}\n                        options={{\n                        legend: {\n                        labels: {\n                        fontColor: 'black',\n                        fontSize: 18\n                        }\n                        },\n                        title: {\n                        display: true,\n                        text: 'Coronavirus en el mundo',\n                        fontColor: 'black'\n                        }\n                        }}/>\n                )\n        }else if(dato.data){\n                chart = (\n                        <Doughnut \n                        data={{\n                        labels: ['infectados','recuperados','muertos'],\n                        datasets:[{\n                        label: 'Gente',\n                        backgroundColor:[\n                        'cornflowerblue',\n                        'grey',\n                        'red'\n                        ],\n                        data: [data.data.confirmed.value, data.data.recovered.value, data.data.deaths.value]\n                        }],\n                        }}\n                        options={{\n                        legend: {\n                        display: true,\n                        fontColor: 'white'\n                        },\n                        title: {\n                        display: true,\n                        text: `Coronavirus en ${pais}`,\n                        fontColor: 'black'\n                        }\n                        }}\n                />\n                                )\n        }\n\n        return(\n                <>\n                { !data.data ? (<Spinner animation=\"grow\" variant=\"info\" />):\n                        (<div>\n                                {chart}\n                        </div>)\n                }\n                </>\n        )\n}\n\n\nexport default Graph;\n","import React,{ useState, useEffect } from 'react';\nimport axios from 'axios'\n//bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row } from 'react-bootstrap'\n//components\nimport Nav from './components/Nav'\nimport Paises from './components/Paises'\nimport Info from './components/Card'\nimport Graph from './components/Graficos'\n\nconst App = ()=>{\n\n        const [pais, setPais] = useState('');\n        const [data, setData] = useState({})\n\n        useEffect(()=>{\n                const cargar = async()=>{\n                        const apidata = await datos(pais);\n                        setData(apidata);\n                }\n                cargar();\n        },[pais])\n\n        console.log(data);\n\n        const paisForm = async (pais) => {\n                setPais(pais);\n        }\n\n        //console.log(pais);\n\n        const datos = async(pais)=>{\n                let url = '';\n                if(pais === '' || pais === 'Seleccione un pais'){\n                        url = \"https://covid19.mathdro.id/api\";\n                }else{\n                        url = `https://covid19.mathdro.id/api/countries/${pais}`;\n                }\n\n                try{\n                        const data = await axios.get(url);\n                        return data;\n                }catch(err){\n                        console.log(err);\n                }\n        }\n\n\n        return(\n                <div>\n                        <Nav />\n                        <Container fluid>\n                                <Row>\n                                        <Col xl={2}>\n                                                <Paises onChange={paisForm} />\n                                        </Col>\n                                        <Col xl={8}>\n                                                <Graph pais={pais} data={data}/>\n                                        </Col>\n                                        <Col xl={2}>\n                                                <Info data={data}/>\n                                        </Col>\n                                </Row>\n                        </Container>\n                </div>\n                );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}